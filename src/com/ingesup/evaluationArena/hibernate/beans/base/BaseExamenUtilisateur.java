package com.ingesup.evaluationArena.hibernate.beans.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the Examen_Utilisateur table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="Examen_Utilisateur"
 */
public abstract class BaseExamenUtilisateur  implements Serializable {

	public static String PROP_UTILISATEUR = "Utilisateur";
	public static String PROP_RESULT = "Result";
	public static String PROP_IS_COMPLETED = "IsCompleted";
	public static String PROP_ID = "Id";
	public static String PROP_EXAMEN = "Examen";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.Integer _result;
	private boolean _isCompleted;

	// many to one
	private com.ingesup.evaluationArena.hibernate.beans.Examen _examen;
	private com.ingesup.evaluationArena.hibernate.beans.Utilisateur _utilisateur;


	// constructors
	public BaseExamenUtilisateur () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseExamenUtilisateur (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseExamenUtilisateur (
		java.lang.Integer _id,
		com.ingesup.evaluationArena.hibernate.beans.Examen _examen,
		com.ingesup.evaluationArena.hibernate.beans.Utilisateur _utilisateur,
		boolean _isCompleted) {

		this.setId(_id);
		this.setExamen(_examen);
		this.setUtilisateur(_utilisateur);
		this.setIsCompleted(_isCompleted);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="vm"
     *  column="ID"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: Result
	 */
	public java.lang.Integer getResult () {
		return _result;
	}

	/**
	 * Set the value related to the column: Result
	 * @param _result the Result value
	 */
	public void setResult (java.lang.Integer _result) {
		this._result = _result;
	}


	/**
	 * Return the value associated with the column: isCompleted
	 */
	public boolean isIsCompleted () {
		return _isCompleted;
	}

	/**
	 * Set the value related to the column: isCompleted
	 * @param _isCompleted the isCompleted value
	 */
	public void setIsCompleted (boolean _isCompleted) {
		this._isCompleted = _isCompleted;
	}


	/**
     * @hibernate.property
     *  column=Examen_ID
	 * not-null=true
	 */
	public com.ingesup.evaluationArena.hibernate.beans.Examen getExamen () {
		return this._examen;
	}

	/**
	 * Set the value related to the column: Examen_ID
	 * @param _examen the Examen_ID value
	 */
	public void setExamen (com.ingesup.evaluationArena.hibernate.beans.Examen _examen) {
		this._examen = _examen;
	}


	/**
     * @hibernate.property
     *  column=Utilisateur_ID
	 * not-null=true
	 */
	public com.ingesup.evaluationArena.hibernate.beans.Utilisateur getUtilisateur () {
		return this._utilisateur;
	}

	/**
	 * Set the value related to the column: Utilisateur_ID
	 * @param _utilisateur the Utilisateur_ID value
	 */
	public void setUtilisateur (com.ingesup.evaluationArena.hibernate.beans.Utilisateur _utilisateur) {
		this._utilisateur = _utilisateur;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof com.ingesup.evaluationArena.hibernate.beans.base.BaseExamenUtilisateur)) return false;
		else {
			com.ingesup.evaluationArena.hibernate.beans.base.BaseExamenUtilisateur mObj = (com.ingesup.evaluationArena.hibernate.beans.base.BaseExamenUtilisateur) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}